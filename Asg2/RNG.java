package Asg2;
/**
 * This class RNG is used to generate random int number or double between the minimum and maxmun limits
 *
 * @author Xingwen Cui
 * @version 2022.1.18
 */
public class RNG
{
    private int minimumNumber; // minimum value of the random number
    private int maximumNumber; // Maximum value of the random number
    
    /**
     * RNG default Constructor to construct the RNG object
     *
     */
    public RNG()
    {
        this.minimumNumber = 0;
        this.maximumNumber = 0;
    }
    
    /**
     * RNG non-default Constructor to construct the RNG object
     *
     * @param minimumNumber int parameter to pass the object's max range
     * @param maximumNumber int parameter to pass the object's min range
     */
    public RNG(int minimumNumber, int maximumNumber) 
    {
        this.minimumNumber = minimumNumber;
        this.maximumNumber = maximumNumber;
    }

    /**
     * Method generateInt to generate a int number in object's range
     *
     * @return int value generated number
     */
    public int generateInt()
    {
        return (int)((Math.random() * (maximumNumber - minimumNumber + 1) + minimumNumber));
    }

    /**
     * Method generateIntto generate a int number in object's range
     *
     * @param max int parameter to pass the maximum range 
     * @param min int parameter to pass the minimum range
     * @return int value generated by pass range
     */
    public int generateInt(int max, int min)
    {
        int randomRange = max - min + 1;
        int randomNumber = (int)((Math.random()* randomRange) + min);
        return randomNumber;
    }
    
    /**
     * Method generateDouble to generate a double number in object's range
     *
     * @return double number generated by object's range
     */
    public double generateDouble()
    {
        double rng = (double) generateInt() / 100;
        return rng;
    }

    /**
     * Method generateDouble to generate a double number in the set range
     *
     * @param max int parameter the max range of the number 
     * @param min int parameter the min range of the number
     * @return double value generated double number
     */
    public double generateDouble(int max, int min)
    {
        double rng = (double) generateInt(max, min) / 100;
        return rng;
    }

    /**
     * Method getMaximumNumber to get object's max number
     *
     * @return int the max number of the object
     */
    public int getMaximumNumber() 
    {
        return maximumNumber;
    }

    /**
     * Method getMinimumNumber to get object's min number
     *
     * @return int the min number of the object
     */
    public int getMinimumNumber() 
    {
        return minimumNumber;
    }

    /**
     * Method setMaximumNumber to modify max number
     *
     * @param maximumNumber int parameter to pass maximum number
     */
    public void setMaximumNumber(int maximumNumber) 
    {
        this.maximumNumber = maximumNumber;
    }

    /**
     * Method setMinimumNumber to modify min number
     *
     * @param minimumNumber int parameter to pass minimum number
     */
    public void setMinimumNumber(int minimumNumber) 
    {
        this.minimumNumber = minimumNumber;
    }
}